package com.marmitexpress.filters;

import com.marmitexpress.utils.VerificadorDeValor;
import com.marmitexpress.exceptions.AcessDeniedException;
import org.springframework.beans.factory.annotation.Autowired;

import javax.servlet.*;
import javax.servlet.http.HttpServletRequest;
import java.io.IOException;

public class ValidacaoFiltro implements Filter {

    @Autowired
    private VerificadorDeValor validadorDeSenha;

    @Override
    public void init(FilterConfig filterConfig) throws ServletException {
        // Método de inicialização, se necessário
    }

    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
            throws IOException, ServletException {

        HttpServletRequest httpRequest = (HttpServletRequest) request;
        String senhaRecebida = httpRequest.getHeader("Authorization"); // ou qualquer outro cabeçalho

        // Verifica se a senha é válida
        if (!validadorDeSenha.validarSenha(senhaRecebida)) {
            throw new AcessDeniedException("Acesso negado. Senha inválida.");
        }

        // Se a senha for válida, segue para o próximo filtro ou controlador
        chain.doFilter(request, response);
    }

    @Override
    public void destroy() {
        // Método de destruição, caso necessário
    }
}
